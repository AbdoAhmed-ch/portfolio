/* üåå Base Styles */
@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&display=swap');

:root {
    --future-blue: #ffa500;
    --neon-pink: #ff00aa;
    --cyber-purple: #bb86fc;
    --void-black: #ffffff;
    --matrix-green: #00ff41;
    --starlight: rgba(255, 255, 255, 0.9);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Quicksand', sans-serif;
    background: #000;
    color: var(--starlight);
    overflow-x: hidden;
    min-height: 100vh;
    position: relative;
}

/* üèÅ Header with Logo */
.header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    padding: 1.5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    z-index: 1000;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(10px);
}

.logo {
    display: flex;
    align-items: center;
    gap: 0.8rem;
    text-decoration: none;
    z-index: 1001;
    font-family: 'Pixelify Sans',sans-serif;

}

.logo-img {
    width: 40px;
    height: 40px;
    object-fit: contain;
}

.logo-text {
    font-family: 'Quicksand ', sans-serif;
    font-size: 1.2rem;
    background: linear-gradient(90deg, var(--future-blue), var(--neon-pink));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    letter-spacing: 1px;
}

/* üçî Hamburger Menu */
.menu-toggle {
    display: none;
    flex-direction: column;
    justify-content: space-between;
    width: 30px;
    height: 21px;
    cursor: pointer;
    z-index: 1001;
    position: relative;
}

.menu-toggle span {
    display: block;
    height: 3px;
    width: 100%;
    background: var(--future-blue);
    border-radius: 3px;
    transition: all 0.3s ease;
}

.menu-toggle.active span:nth-child(1) {
    transform: translateY(9px) rotate(45deg);
}

.menu-toggle.active span:nth-child(2) {
    opacity: 0;
}

.menu-toggle.active span:nth-child(3) {
    transform: translateY(-9px) rotate(-45deg);
}

/* üå† Intro Overlay */
.intro-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #000;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 9999;
    opacity: 1;
    transition: opacity 1.5s ease-out;
}

.intro-content {
    text-align: center;
    transform: translateY(20px);
    opacity: 0;
    animation: fadeInUp 1s ease-out forwards;
    animation-delay: 0.5s;
}

.intro-title {
    font-size: clamp(2rem, 8vw, 5rem);
    background: linear-gradient(90deg, var(--future-blue), var(--neon-pink));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    margin-bottom: 1rem;
    text-shadow: 0 0 20px rgba(0, 240, 255, 0.5);
    letter-spacing: 2px;
    font-family: 'Pixelify Sans',sans-serif;

}

.intro-subtitle {
    font-size: clamp(1rem, 3vw, 1.5rem);
    color: var(--starlight);
    margin-bottom: 2rem;
    font-family: 'Pixelify Sans',sans-serif;
}

@keyframes fadeInUp {
    to { opacity: 1; transform: translateY(0); }
}

/* ü™ê Main Container */
.future-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem;
    position: relative;
    opacity: 0;
    animation: fadeIn 1s ease-out forwards;
    animation-delay: 2s;
    margin-top: 80px;
}

@keyframes fadeIn {
    to { opacity: 1; }
}

/* üõ∏ Navigation */
.nav-center-container {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    justify-content: center;
}

.future-nav {
    display: flex;
    justify-content: center;
    gap: 1.5rem;
    flex-wrap: wrap;
    margin-top: 1rem;
}

.nav-item {
    color: var(--starlight);
    text-decoration: none;
    font-family: 'Quicksand ', sans-serif;
    font-size: clamp(0.8rem, 2vw, 1rem);
    padding: 0.75rem 1.5rem;
    border-radius: 30px;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    border: 1px solid rgba(255, 255, 255, 0.1);
    background: rgba(30, 30, 30, 0.3);
}

/* Glitch effect for nav items on hover */
.nav-item:hover {
    color: var(--future-blue); /* Change text color on hover */
    text-shadow: 0 0 10px var(--future-blue), 0 0 20px var(--future-blue), 0 0 30px var(--future-blue);
    animation: glitch 0.5s infinite; /* Apply glitch animation */
}


.nav-item::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 100%;
    background: linear-gradient(90deg, transparent, var(--future-blue), transparent);
    transition: width 0.3s ease;
    z-index: -1;
}

.nav-item:hover::before {
    width: 100%;
}

.nav-item.active {
    color: black;
    background: var(--future-blue);
    box-shadow: 0 0 20px rgba(0, 240, 255, 0.5);
}

/* Mobile Navigation */
.mobile-nav {
    position: fixed;
    top: 0;
    right: -100%;
    width: 70%;
    height: 100vh;
    background: rgba(10, 10, 20, 0.95);
    backdrop-filter: blur(15px);
    flex-direction: column;
    padding: 6rem 2rem 2rem;
    z-index: 1000;
    transition: right 0.5s cubic-bezier(0.645, 0.045, 0.355, 1);
    display: none;
}

.mobile-nav.active {
    right: 0;
    display: flex;
}

.mobile-nav .nav-item {
    width: 100%;
    text-align: center;
    margin-bottom: 1rem;
    padding: 1rem;
    border-radius: 8px;
}

/* Sections */
section {
    display: none;
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.5s cubic-bezier(0.645, 0.045, 0.355, 1);
    /* Ensure section has a minimum height and is positioned relative for canvas */
    min-height: 100vh; /* Ensure section takes at least full viewport height */
    position: relative; /* Crucial for absolute positioning of child elements */
}

section.active {
    display: block;
    opacity: 1;
    transform: translateY(0);
}

/* Three.js Canvas Styling */
#threejs-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -2; /* Behind everything else */
    background: transparent;
}

/* Cursor Trail Styling */
#cursor-trail-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none; /* Allows clicks to pass through */
    overflow: hidden;
    z-index: 999; /* Above content but below intro overlay */
}

.trail-particle {
    position: absolute;
    background: var(--future-blue); /* Neon blue color */
    border-radius: 50%;
    opacity: 0;
    animation: fadeOutTrail 1s forwards;
    transform: scale(0);
    transition: transform 0.1s ease-out, opacity 1s ease-out;
}

@keyframes fadeOutTrail {
    0% { opacity: 1; transform: scale(1); }
    100% { opacity: 0; transform: scale(0.5); }
}


/* ü™ê Glass Card */
.future-card {
    background: rgba(20, 20, 30, 0.6);
    backdrop-filter: blur(15px);
    -webkit-backdrop-filter: blur(15px);
    border-radius: 20px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    padding: 2.5rem;
    margin: 2rem auto;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    transition: all 0.3s ease;
    max-width: 1000px;
}

.future-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 40px rgba(0, 240, 255, 0.2);
    border-color: var(--future-blue);
}

/* üîÆ Neon Text */
h1.future-heading {
    font-family: Quicksand, sans-serif;
    font-size: clamp(2rem, 5vw, 3.5rem);
    background: linear-gradient(90deg, var(--future-blue), var(--neon-pink));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    text-shadow: 0 0 15px rgba(0, 240, 255, 0.3);
    margin-bottom: 2rem;
    text-align: center;
    letter-spacing: 1px;
}

/* üë®‚Äçüíª About Section */
.about-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
}

.profile-img-container {
    position: relative;
    width: 200px;
    height: 200px;
}

.profile-img {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    object-fit: cover;
    border: 3px solid var(--future-blue);
    box-shadow: 0 0 30px rgba(0, 240, 255, 0.5);
    position: relative;
    z-index: 1;
}

.profile-img-border {
    position: absolute;
    top: -5px;
    left: -5px;
    right: -5px;
    bottom: -5px;
    border-radius: 50%;
    background: linear-gradient(45deg, var(--future-blue), var(--neon-pink), var(--cyber-purple));
    z-index: 0;
    animation: rotateBorder 6s linear infinite;
}

@keyframes rotateBorder {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.bio-text {
    text-align: center;
    line-height: 1.8;
    max-width: 700px;
    font-size: clamp(0.9rem, 2vw, 1.1rem);
}

/* üõ†Ô∏è Skills Section */
.skills-section {
    margin-top: 3rem;
}

.skills-title {
    font-family: 'Quicksand', sans-serif;
    font-size: clamp(1.2rem, 3vw, 1.8rem);
    color: var(--future-blue);
    margin-bottom: 1.5rem;
    text-align: center;
}

.skills-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
    gap: 1.5rem;
    justify-items: center;
}

.skill-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    padding: 1rem;
    border-radius: 10px;
    transition: all 0.3s ease;
    background: rgba(30, 30, 30, 0.5);
    border: 1px solid rgba(255, 255, 255, 0.05);
    width: 100%;
}

.skill-item:hover {
    transform: translateY(-5px);
    background: rgba(0, 240, 255, 0.1);
    border-color: var(--future-blue);
    box-shadow: 0 5px 15px rgba(0, 240, 255, 0.2);
}

.skill-icon {
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
}

.skill-name {
    font-size: 0.9rem;
    text-align: center;
}

/* üöÄ Projects Section */
.project-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
}

.project-card {
    background: rgba(30, 30, 30, 0.6);
    border-radius: 15px;
    padding: 1.5rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
    display: flex;
    flex-direction: column;
}

.project-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 15px 30px rgba(0, 240, 255, 0.2);
    border-color: var(--future-blue);
}

.project-image {
    width: 100%;
    height: 180px;
    object-fit: cover;
    border-radius: 10px;
    margin-bottom: 1rem;
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.project-title {
    font-size: 1.3rem;
    margin-bottom: 0.5rem;
    color: var(--future-blue);
}

.project-description {
    color: var(--starlight);
    font-size: 0.95rem;
    margin-bottom: 1rem;
    flex-grow: 1;
}

.project-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: auto;
}

.tag {
    background: rgba(0, 240, 255, 0.1);
    color: var(--future-blue);
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
    font-size: 0.7rem;
    border: 1px solid rgba(0, 240, 255, 0.3);
}

/* üìß Contact Section */
.contact-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    max-width: 600px;
    margin: 2rem auto;
}

.form-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.form-label {
    color: var(--starlight);
    font-size: 0.95rem;
}

.form-input, .form-textarea {
    background: rgba(30, 30, 30, 0.7);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    padding: 0.9rem;
    color: white;
    font-family: inherit;
    transition: all 0.3s ease;
    font-size: 1rem;
}

.form-input:focus, .form-textarea:focus {
    outline: none;
    border-color: var(--future-blue);
    box-shadow: 0 0 15px rgba(0, 240, 255, 0.3);
}

.form-textarea {
    min-height: 150px;
    resize: vertical;
}

.submit-btn {
    background: linear-gradient(90deg, var(--future-blue), var(--neon-pink));
    color: black;
    border: none;
    padding: 1rem;
    border-radius: 8px;
    cursor: pointer;
    font-family: 'Quicksand', sans-serif;
    font-weight: bold;
    transition: all 0.3s ease;
    margin-top: 1rem;
    font-size: 1rem;
}

.submit-btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 5px 20px rgba(0, 240, 255, 0.4);
}

/* üåü Floating Elements */
.floating-element {
    position: absolute;
    border-radius: 50%;
    filter: blur(30px);
    opacity: 0.3;
    z-index: -1;
}

.element-1 {
    width: 300px;
    height: 300px;
    background: var(--future-blue);
    top: -100px;
    right: -100px;
    animation: float 12s ease-in-out infinite;
}

.element-2 {
    width: 400px;
    height: 400px;
    background: var(--neon-pink);
    bottom: -150px;
    left: -150px;
    animation: float 15s ease-in-out infinite reverse;
}

@keyframes float {
    0%, 100% { transform: translate(0, 0); }
    25% { transform: translate(20px, 20px); }
    50% { transform: translate(0, 30px); }
    75% { transform: translate(-20px, 10px); }
}

/* üì± Mobile Responsiveness */
@media (max-width: 992px) {
    .nav-center-container {
        display: none;
    }

    .menu-toggle {
        display: flex;
    }

    .mobile-nav {
        display: none; /* Ensure it's hidden by default on these screens and shown via JS */
    }

    .future-container {
        padding: 1.5rem;
        margin-top: 70px;
    }

    .future-card {
        padding: 1.5rem;
        margin: 1.5rem auto;
    }

    .profile-img-container {
        width: 150px;
        height: 150px;
    }

    .skills-grid {
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
        gap: 1rem;
    }

    .skill-icon {
        font-size: 2rem;
    }

    .project-grid {
        grid-template-columns: 1fr;
    }

    .element-1, .element-2 {
        display: none;
    }
}

@media (max-width: 576px) {
    .future-container {
        padding: 1rem;
    }

    .future-card {
        padding: 1.2rem;
    }

    .skills-grid {
        grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
    }

    .skill-icon {
        font-size: 1.8rem;
    }

    .skill-name {
        font-size: 0.8rem;
    }

    .logo-text {
        font-size: 1rem;
    }

    .logo-img {
        width: 30px;
        height: 30px;
    }
}
/* üéõÔ∏è Button Group Styles */
.btn-group {
    display: flex;
    gap: 1rem;
    margin-top: 1.5rem;
}

.btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.75rem 1.5rem;
    border-radius: 30px;
    font-family: 'Quicksand', sans-serif;
    font-size: 0.9rem;
    font-weight: bold;
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: 1px;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
    position: relative;
    overflow: hidden;
    border: none;
    z-index: 1;
}

.btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    transition: all 0.3s ease;
}

.btn-primary {
    background: linear-gradient(90deg, var(--future-blue), var(--cyber-purple));
    color: black;
    box-shadow: 0 0 15px rgba(0, 240, 255, 0.3);
}

.btn-primary:hover {
    transform: translateY(-3px);
    box-shadow: 0 5px 25px rgba(0, 240, 255, 0.5);
}

.btn-primary::before {
    background: linear-gradient(90deg, var(--cyber-purple), var(--future-blue));
    opacity: 0;
}

.btn-primary:hover::before {
    opacity: 1;
}

.btn-secondary {
    background: transparent;
    color: var(--future-blue);
    border: 1px solid var(--future-blue);
    box-shadow: 0 0 15px rgba(0, 240, 255, 0.1);
}

.btn-secondary:hover {
    background: rgba(0, 240, 255, 0.1);
    transform: translateY(-3px);
    box-shadow: 0 5px 25px rgba(0, 240, 255, 0.3);
}

.btn-secondary::before {
    background: linear-gradient(90deg, transparent, rgba(0, 240, 255, 0.2), transparent);
    transform: translateX(-100%);
}

.btn-secondary:hover::before {
    transform: translateX(100%);
}

/* Glow effect on hover */
.btn:hover {
    filter: brightness(1.1);
}

/* Active/pressed state */
.btn:active {
    transform: translateY(1px) !important;
}

/* Responsive adjustments for buttons */
@media (max-width: 576px) {
    .btn-group {
        flex-direction: column;
        gap: 0.75rem;
    }

    .btn {
        width: 100%;
        padding: 0.65rem 1.25rem;
    }
}
/* üëæ Ultra-Creative Social Icons - "Activation Sequence" - START */
.social-icons {
    text-align: center;
    margin-top: 3rem;
    perspective: 1000px; /* Crucial for 3D hover effects */
}

.social-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 55px; /* Increased size */
    height: 55px;
    margin: 0 15px;
    color: var(--starlight); /* Initial, slightly muted icon color */
    background: rgba(var(--future-blue-rgb, 70, 70, 100), 0.1); /* Use RGB for opacity control */
    border: none; /* We'll create a custom animated border */
    border-radius: 50%;
    text-decoration: none;
    font-size: 1.5rem;
    transition: transform 0.5s cubic-bezier(0.19, 1, 0.22, 1), filter 0.5s ease;
    position: relative;
    overflow: visible; /* Allow pseudo-elements to extend slightly if needed for effects */
    filter: grayscale(50%) brightness(0.8); /* Desaturate and dim slightly in idle state */
    transform-style: preserve-3d; /* For 3D transformations */
}

/* Base for border segments and effects */
.social-icon::before,
.social-icon::after {
    content: '';
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    border-radius: 50%;
    transition: all 0.4s cubic-bezier(0.19, 1, 0.22, 1);
    pointer-events: none; /* Allow clicks to pass through */
}

/* Segmented/Animated Border - Bottom Layer (Glow) */
.social-icon::before {
    box-shadow: 0 0 0 2px rgba(var(--future-blue-rgb, 0, 240, 255), 0.3); /* Faint initial outline */
    opacity: 0.7;
    animation: pulse-glow 3s infinite ease-in-out;
}

/* Segmented/Animated Border - Top Layer (Segments) */
.social-icon::after {
    /* Creates 4 border segments that will animate */
    border: 3px solid transparent;
    border-top-color: var(--future-blue);
    border-right-color: var(--future-blue);
    opacity: 0.5;
    transform: rotate(45deg) scale(0.95);
    animation: rotate-segments 10s linear infinite alternate;
}

@keyframes pulse-glow {
    0%, 100% { box-shadow: 0 0 5px 2px rgba(var(--future-blue-rgb, 0, 240, 255), 0.2), 0 0 0px var(--neon-pink-rgb, 255, 0, 170); transform: scale(1); }
    50% { box-shadow: 0 0 15px 3px rgba(var(--future-blue-rgb, 0, 240, 255), 0.4), 0 0 10px var(--neon-pink-rgb, 255, 0, 170); transform: scale(1.02); }
}

@keyframes rotate-segments {
    0% { transform: rotate(45deg) scale(0.95); opacity: 0.5; }
    50% { transform: rotate(225deg) scale(1.05); opacity: 1; }
    100% { transform: rotate(405deg) scale(0.95); opacity: 0.5; }
}

.social-icon i {
    position: relative;
    z-index: 1;
    transition: transform 0.4s cubic-bezier(0.19, 1, 0.22, 1), color 0.3s ease, text-shadow 0.3s ease;
    text-shadow: 0 0 3px rgba(255,255,255,0.3);
}

/* --- HOVER "ACTIVATION SEQUENCE" --- */
.social-icon:hover {
    filter: grayscale(0%) brightness(1.2); /* Full color and brightness */
    transform: translateY(-8px) rotateY(15deg) scale(1.1); /* 3D lift and tilt */
    background: rgba(var(--future-blue-rgb, 0, 240, 255), 0.2); /* Brighter background fill */
}

/* Glitch effect for icon on hover - short and sharp */
.social-icon:hover i {
    color: var(--void-black); /* Icon color change for contrast */
    animation: icon-glitch 0.3s ease-out forwards;
    text-shadow: 0 0 10px var(--future-blue), 0 0 20px var(--starlight); /* Stronger glow on icon */
}



.social-icon:hover::before {
    /* Intensify glow and make border solid */
    animation: none; /* Stop pulsing, go to fixed state */
    box-shadow: 0 0 15px 3px var(--future-blue),
                0 0 25px 5px var(--neon-pink),
                inset 0 0 10px rgba(var(--starlight-rgb, 255,255,255), 0.5);
    opacity: 1;
    transform: scale(1.05);
}

.social-icon:hover::after {
    /* Complete and energize border segments */
    animation: none; /* Stop segment rotation */
    border-width: 2px; /* Thinner, sharper border */
    border-color: var(--neon-pink); /* Change color to contrast */
    opacity: 1;
    transform: rotate(0deg) scale(1.1); /* Full circle, slightly larger */
    box-shadow: 0 0 10px var(--neon-pink), inset 0 0 5px var(--neon-pink);
}

/* --- Data Shards/Particles (Optional Enhancement) --- */
/* This is a bit more advanced and might require more pseudo-elements or JS for many particles.
   Here's a very simple CSS-only concept for a few "shards": */
.social-icon .shard {
    position: absolute;
    width: 3px; height: 3px;
    background: var(--matrix-green);
    border-radius: 50%;
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
}

.social-icon:hover .shard {
    opacity: 1;
    animation: fly-shard 0.5s ease-out forwards;
}

.social-icon .shard.s1 { top: -5px; left: 50%; transform: translateX(-50%); animation-delay: 0.1s; }
.social-icon .shard.s2 { top: 50%; left: -5px; transform: translateY(-50%); animation-delay: 0.15s; }
.social-icon .shard.s3 { bottom: -5px; left: 50%; transform: translateX(-50%); animation-delay: 0.2s; }
.social-icon .shard.s4 { top: 50%; right: -5px; transform: translateY(-50%); animation-delay: 0.25s; }

@keyframes fly-shard {
    0% { opacity: 0; transform: scale(0.5) translate(0,0); }
    50% { opacity: 1; transform: scale(1); }
    100% { opacity: 0; transform: scale(0.5) translate(calc(var(--dx, 0) * 15px), calc(var(--dy, 0) * 15px)); }
}
/* To use shards, add <span class="shard s1"></span> etc. inside each <a> tag,
   and define --dx, --dy for their direction. This is simplified here.
   For a simpler approach, you might skip explicit shards or use a more complex box-shadow animation.
*/


/* Define RGB versions of your colors in :root if you haven't already for rgba() usage */
:root {
    --future-blue: #ffa500;
    --future-blue-rgb: 255, 165, 0; /* New */
    --neon-pink: #ff00aa;
    --neon-pink-rgb: 255, 0, 170; /* New */
    --cyber-purple: #bb86fc;
    --cyber-purple-rgb: 187, 134, 252; /* New */
    --void-black: #ffffff;
    --void-black-rgb: 10, 10, 10; /* New */
    --matrix-green: #00ff41;
    --matrix-green-rgb: 0, 255, 65; /* New */
    --starlight: rgba(255, 255, 255, 0.9);
    --starlight-rgb: 255, 255, 255; /* New */
}


/* Adjust padding for the home card if necessary */
#home .future-card {
    padding-bottom: 4.5rem;
}
/* üëæ Ultra-Creative Social Icons - "Activation Sequence" - END */
/* üìÑ Creative CV Download Button - START */
.cv-download-container {
    margin-top: 2.5rem; /* Space above the button */
    text-align: center; /* Center the button */
}

.creative-cv-btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 12px 28px;
    font-family: 'Quicksand', sans-serif;
    font-size: 1.1rem;
    font-weight: bold;
    color: var(--void-black); /* Text color on the button */
    background: linear-gradient(135deg, var(--future-blue), var(--neon-pink));
    border: none;
    border-radius: 5px; /* Slightly sharp edges */
    text-decoration: none;
    position: relative;
    overflow: hidden; /* For pseudo-elements */
    z-index: 1;
    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    box-shadow: 0 4px 15px rgba(0,0,0,0.2);
    clip-path: polygon(0% 0%, 100% 0%, 100% calc(100% - 10px), calc(100% - 10px) 100%, 0% 100%); /* Angled corner */
}

.creative-cv-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
    transition: left 0.5s cubic-bezier(0.25, 0.8, 0.25, 1);
    z-index: -1;
}

.creative-cv-btn:hover::before {
    left: 100%; /* Shine effect */
}

.creative-cv-btn:hover {
    transform: translateY(-3px) scale(1.03);
    box-shadow: 0 8px 25px rgba(var(--future-blue-rgb, 255,165,0), 0.4),
                0 5px 15px rgba(var(--neon-pink-rgb, 255,0,170), 0.3);
    color: var(--void-black);
}

.creative-cv-btn:active {
    transform: translateY(1px) scale(1);
    box-shadow: 0 2px 10px rgba(0,0,0,0.2);
}

.btn-icon-cv {
    margin-right: 10px;
    font-size: 1.3em;
    transition: transform 0.3s ease;
}

.btn-text-cv {
    letter-spacing: 1px;
}

.creative-cv-btn:hover .btn-icon-cv {
    transform: scale(1.1) rotate(-5deg); /* Icon slight animation */
}

/* Make sure you have RGB versions of your colors in :root for rgba() if not already defined */
/* Example:
:root {
    --future-blue: #ffa500;
    --future-blue-rgb: 255, 165, 0;
    --neon-pink: #ff00aa;
    --neon-pink-rgb: 255, 0, 170;
    // ... other colors
}
*/
/* üìÑ Creative CV Download Button - END */
